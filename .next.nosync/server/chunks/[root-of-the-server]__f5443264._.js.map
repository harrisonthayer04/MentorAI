{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/harrisonthayer/Library/Mobile%20Documents/com~apple~CloudDocs/Code/random_projects/babymentorai/babymentorai/src/app/api/tts/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\nexport async function POST(req: Request) {\n  try {\n    const { text, voiceId, modelId } = (await req.json()) as {\n      text?: string;\n      voiceId?: string;\n      modelId?: string;\n    };\n\n    if (!text || text.trim().length === 0) {\n      return NextResponse.json({ error: \"Missing text\" }, { status: 400 });\n    }\n\n    const apiKey = process.env.ELEVENLABS_API_KEY;\n    if (!apiKey) {\n      return NextResponse.json({ error: \"Missing ELEVENLABS_API_KEY\" }, { status: 500 });\n    }\n\n    const defaultVoice = process.env.ELEVENLABS_VOICE_ID || \"21m00Tcm4TlvDq8ikWAM\"; // Rachel (public demo)\n    const voice = voiceId || defaultVoice;\n    const model = modelId || process.env.ELEVENLABS_MODEL_ID || \"eleven_multilingual_v2\";\n\n    const resp = await fetch(`https://api.elevenlabs.io/v1/text-to-speech/${voice}`, {\n      method: \"POST\",\n      headers: {\n        \"xi-api-key\": apiKey,\n        Accept: \"audio/mpeg\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        text,\n        model_id: model,\n        voice_settings: { stability: 0.4, similarity_boost: 0.8 },\n        optimize_streaming_latency: 0,\n        output_format: \"mp3_44100_128\",\n      }),\n    });\n\n    if (!resp.ok) {\n      const errorText = await resp.text();\n      return NextResponse.json({ error: errorText }, { status: 502 });\n    }\n\n    const audioBuffer = await resp.arrayBuffer();\n    return new NextResponse(audioBuffer, {\n      status: 200,\n      headers: {\n        \"Content-Type\": \"audio/mpeg\",\n        \"Content-Length\": String(audioBuffer.byteLength),\n        \"Accept-Ranges\": \"bytes\",\n        \"Cache-Control\": \"no-store, no-cache, must-revalidate\",\n      },\n    });\n  } catch (err: unknown) {\n    const message = err instanceof Error ? err.message : String(err);\n    return NextResponse.json({ error: message }, { status: 500 });\n  }\n}\n\n\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,GAAI,MAAM,IAAI,IAAI;QAMlD,IAAI,CAAC,QAAQ,KAAK,IAAI,GAAG,MAAM,KAAK,GAAG;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,SAAS,QAAQ,GAAG,CAAC,kBAAkB;QAC7C,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA6B,GAAG;gBAAE,QAAQ;YAAI;QAClF;QAEA,MAAM,eAAe,QAAQ,GAAG,CAAC,mBAAmB,IAAI,wBAAwB,uBAAuB;QACvG,MAAM,QAAQ,WAAW;QACzB,MAAM,QAAQ,WAAW,QAAQ,GAAG,CAAC,mBAAmB,IAAI;QAE5D,MAAM,OAAO,MAAM,MAAM,CAAC,4CAA4C,EAAE,OAAO,EAAE;YAC/E,QAAQ;YACR,SAAS;gBACP,cAAc;gBACd,QAAQ;gBACR,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB;gBACA,UAAU;gBACV,gBAAgB;oBAAE,WAAW;oBAAK,kBAAkB;gBAAI;gBACxD,4BAA4B;gBAC5B,eAAe;YACjB;QACF;QAEA,IAAI,CAAC,KAAK,EAAE,EAAE;YACZ,MAAM,YAAY,MAAM,KAAK,IAAI;YACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAU,GAAG;gBAAE,QAAQ;YAAI;QAC/D;QAEA,MAAM,cAAc,MAAM,KAAK,WAAW;QAC1C,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,aAAa;YACnC,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,kBAAkB,OAAO,YAAY,UAAU;gBAC/C,iBAAiB;gBACjB,iBAAiB;YACnB;QACF;IACF,EAAE,OAAO,KAAc;QACrB,MAAM,UAAU,eAAe,QAAQ,IAAI,OAAO,GAAG,OAAO;QAC5D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAQ,GAAG;YAAE,QAAQ;QAAI;IAC7D;AACF","debugId":null}}]
}